{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/inventory/client/src/pages/ItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Grid, TextField, Button, Typography, Paper, InputAdornment } from '@mui/material';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemForm = () => {\n  _s();\n  const {\n    customerId,\n    itemId\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: '',\n    description: '',\n    quantity: 1,\n    unitPrice: 0\n  });\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  useEffect(() => {\n    if (itemId && itemId !== 'new') {\n      api.get('/items').then(res => {\n        const item = res.data.items.find(i => i._id === itemId);\n        if (item) {\n          setForm({\n            name: item.name,\n            description: item.description || '',\n            quantity: item.quantity || 1,\n            unitPrice: item.unitPrice || 0\n          });\n          if (item.imageUrl) {\n            setPreview(`http://localhost:5000${item.imageUrl}`);\n          }\n        }\n      });\n    }\n  }, [itemId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: name === 'quantity' || name === 'unitPrice' ? Number(value) : value\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n    if (file) {\n      setPreview(URL.createObjectURL(file));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    Object.entries(form).forEach(([key, value]) => {\n      formData.append(key, value);\n    });\n    if (image) formData.append('image', image);\n    formData.append('customerId', customerId);\n    try {\n      if (!itemId || itemId === 'new') {\n        await api.post('/items', formData);\n      } else {\n        await api.put(`/items/${itemId}`, formData);\n      }\n      navigate(`/customer/${customerId}`);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('❌ Error saving item:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert('Error saving item: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: Paper,\n    elevation: 4,\n    sx: {\n      maxWidth: 700,\n      mx: 'auto',\n      mt: 6,\n      p: {\n        xs: 3,\n        md: 5\n      },\n      borderRadius: 4,\n      bgcolor: 'background.paper'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      gutterBottom: true,\n      textAlign: \"center\",\n      children: !itemId || itemId === 'new' ? '➕ Add Product' : '✏️ Edit Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Product Name\",\n            name: \"name\",\n            value: form.name,\n            onChange: handleChange,\n            fullWidth: true,\n            required: true,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            name: \"description\",\n            value: form.description,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Quantity\",\n            name: \"quantity\",\n            type: \"number\",\n            value: form.quantity,\n            onChange: handleChange,\n            fullWidth: true,\n            required: true,\n            variant: \"outlined\",\n            InputProps: {\n              inputProps: {\n                min: 1\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Unit Price\",\n            name: \"unitPrice\",\n            type: \"number\",\n            value: form.unitPrice,\n            onChange: handleChange,\n            fullWidth: true,\n            required: true,\n            variant: \"outlined\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this),\n              inputProps: {\n                min: 0,\n                step: 0.01\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"label\",\n            fullWidth: true,\n            sx: {\n              py: 1.5,\n              borderStyle: 'dashed',\n              bgcolor: 'background.default'\n            },\n            children: [\"\\uD83D\\uDCF7 Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              accept: \"image/*\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), preview && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            src: preview,\n            alt: \"Preview\",\n            sx: {\n              width: 150,\n              height: 150,\n              objectFit: 'cover',\n              borderRadius: 3,\n              border: '2px solid',\n              borderColor: 'divider',\n              mt: 2,\n              boxShadow: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            sx: {\n              px: 4,\n              py: 1.5,\n              mt: 2\n            },\n            children: \"\\uD83D\\uDCBE Save Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemForm, \"efahpYm54oE69wF9DbhMi7bh3rY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ItemForm;\nexport default ItemForm;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import api from '../api';\n\n// const ItemForm = () => {\n//   const { customerId, itemId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({\n//     name: '',\n//     description: '',\n//     quantity: 1,\n//     unitPrice: 0,\n//   });\n\n//   const [image, setImage] = useState(null);\n//   const [preview, setPreview] = useState(null);\n\n//   useEffect(() => {\n//     if (itemId && itemId !== 'new') {\n//       api.get('/items').then(res => {\n//         const item = res.data.items.find(i => i._id === itemId);\n//         if (item) {\n//           setForm({\n//             name: item.name,\n//             description: item.description || '',\n//             quantity: item.quantity || 1,\n//             unitPrice: item.unitPrice || 0,\n//           });\n//           if (item.imageUrl) {\n//             setPreview(`http://localhost:5000${item.imageUrl}`);\n//           }\n//         }\n//       });\n//     }\n//   }, [itemId]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setForm({\n//       ...form,\n//       [name]: name === 'quantity' || name === 'unitPrice' ? Number(value) : value\n//     });\n//   };\n\n//   const handleFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setImage(file);\n//     if (file) {\n//       setPreview(URL.createObjectURL(file));\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     Object.entries(form).forEach(([key, value]) => {\n//       formData.append(key, value);\n//     });\n\n//     if (image) {\n//       formData.append('image', image);\n//     }\n\n//     formData.append('customerId', customerId);\n\n//     try {\n//       if (!itemId || itemId === 'new') {\n//         await api.post('/items', formData);\n//       } else {\n//         await api.put(`/items/${itemId}`, formData);\n//       }\n//       navigate(`/customer/${customerId}`);\n//     } catch (err) {\n//       console.error('❌ Error saving item:', err.response?.data || err.message);\n//       alert('Error saving item: ' + (err.response?.data?.error || err.message));\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"product-form\">\n//       <h2>{!itemId || itemId === 'new' ? 'Add Product' : 'Edit Product'}</h2>\n\n//       <div className=\"row\">\n//         <input\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={form.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           name=\"description\"\n//           placeholder=\"Description\"\n//           value={form.description}\n//           onChange={handleChange}\n//         />\n//         <input\n//           name=\"quantity\"\n//           type=\"number\"\n//           min=\"1\"\n//           value={form.quantity}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n\n//       <div className=\"row\">\n//         <input\n//           name=\"unitPrice\"\n//           type=\"number\"\n//           step=\"0.01\"\n//           min=\"0\"\n//           value={form.unitPrice}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n//       </div>\n\n//       {preview && (\n//         <div className=\"row\">\n//           <img\n//             src={preview}\n//             alt=\"Preview\"\n//             style={{\n//               width: '120px',\n//               height: '120px',\n//               objectFit: 'cover',\n//               borderRadius: '8px',\n//               border: '1px solid #ccc'\n//             }}\n//           />\n//         </div>\n//       )}\n\n//       <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\n//         <button type=\"submit\">💾 Save Product</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default ItemForm;\nvar _c;\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Box","Grid","TextField","Button","Typography","Paper","InputAdornment","api","jsxDEV","_jsxDEV","ItemForm","_s","customerId","itemId","navigate","form","setForm","name","description","quantity","unitPrice","image","setImage","preview","setPreview","get","then","res","item","data","items","find","i","_id","imageUrl","handleChange","e","value","target","Number","handleFileChange","file","files","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","Object","entries","forEach","key","append","post","put","err","_err$response","_err$response2","_err$response2$data","console","error","response","message","alert","component","elevation","sx","maxWidth","mx","mt","p","xs","md","borderRadius","bgcolor","children","variant","fontWeight","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","container","spacing","label","onChange","fullWidth","required","multiline","rows","sm","type","InputProps","inputProps","min","startAdornment","position","step","py","borderStyle","hidden","accept","src","alt","width","height","objectFit","border","borderColor","boxShadow","color","size","px","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/inventory/client/src/pages/ItemForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box, Grid, TextField, Button, Typography, Paper, InputAdornment\r\n} from '@mui/material';\r\nimport api from '../api';\r\n\r\nconst ItemForm = () => {\r\n  const { customerId, itemId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    description: '',\r\n    quantity: 1,\r\n    unitPrice: 0,\r\n  });\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (itemId && itemId !== 'new') {\r\n      api.get('/items').then(res => {\r\n        const item = res.data.items.find(i => i._id === itemId);\r\n        if (item) {\r\n          setForm({\r\n            name: item.name,\r\n            description: item.description || '',\r\n            quantity: item.quantity || 1,\r\n            unitPrice: item.unitPrice || 0,\r\n          });\r\n          if (item.imageUrl) {\r\n            setPreview(`http://localhost:5000${item.imageUrl}`);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [itemId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: name === 'quantity' || name === 'unitPrice' ? Number(value) : value\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(file);\r\n    if (file) {\r\n      setPreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    if (image) formData.append('image', image);\r\n    formData.append('customerId', customerId);\r\n\r\n    try {\r\n      if (!itemId || itemId === 'new') {\r\n        await api.post('/items', formData);\r\n      } else {\r\n        await api.put(`/items/${itemId}`, formData);\r\n      }\r\n      navigate(`/customer/${customerId}`);\r\n    } catch (err) {\r\n      console.error('❌ Error saving item:', err.response?.data || err.message);\r\n      alert('Error saving item: ' + (err.response?.data?.error || err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component={Paper}\r\n      elevation={4}\r\n      sx={{\r\n        maxWidth: 700,\r\n        mx: 'auto',\r\n        mt: 6,\r\n        p: { xs: 3, md: 5 },\r\n        borderRadius: 4,\r\n        bgcolor: 'background.paper',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom textAlign=\"center\">\r\n        {!itemId || itemId === 'new' ? '➕ Add Product' : '✏️ Edit Product'}\r\n      </Typography>\r\n\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Product Name\"\r\n              name=\"name\"\r\n              value={form.name}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={form.description}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Quantity\"\r\n              name=\"quantity\"\r\n              type=\"number\"\r\n              value={form.quantity}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              InputProps={{ inputProps: { min: 1 } }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Unit Price\"\r\n              name=\"unitPrice\"\r\n              type=\"number\"\r\n              value={form.unitPrice}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                inputProps: { min: 0, step: 0.01 }\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              component=\"label\"\r\n              fullWidth\r\n              sx={{\r\n                py: 1.5,\r\n                borderStyle: 'dashed',\r\n                bgcolor: 'background.default',\r\n              }}\r\n            >\r\n              📷 Upload Image\r\n              <input type=\"file\" hidden accept=\"image/*\" onChange={handleFileChange} />\r\n            </Button>\r\n          </Grid>\r\n\r\n          {preview && (\r\n            <Grid item xs={12} textAlign=\"center\">\r\n              <Box\r\n                component=\"img\"\r\n                src={preview}\r\n                alt=\"Preview\"\r\n                sx={{\r\n                  width: 150,\r\n                  height: 150,\r\n                  objectFit: 'cover',\r\n                  borderRadius: 3,\r\n                  border: '2px solid',\r\n                  borderColor: 'divider',\r\n                  mt: 2,\r\n                  boxShadow: 2\r\n                }}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12} textAlign=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{ px: 4, py: 1.5, mt: 2 }}\r\n            >\r\n              💾 Save Product\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import api from '../api';\r\n\r\n// const ItemForm = () => {\r\n//   const { customerId, itemId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({\r\n//     name: '',\r\n//     description: '',\r\n//     quantity: 1,\r\n//     unitPrice: 0,\r\n//   });\r\n\r\n//   const [image, setImage] = useState(null);\r\n//   const [preview, setPreview] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (itemId && itemId !== 'new') {\r\n//       api.get('/items').then(res => {\r\n//         const item = res.data.items.find(i => i._id === itemId);\r\n//         if (item) {\r\n//           setForm({\r\n//             name: item.name,\r\n//             description: item.description || '',\r\n//             quantity: item.quantity || 1,\r\n//             unitPrice: item.unitPrice || 0,\r\n//           });\r\n//           if (item.imageUrl) {\r\n//             setPreview(`http://localhost:5000${item.imageUrl}`);\r\n//           }\r\n//         }\r\n//       });\r\n//     }\r\n//   }, [itemId]);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setForm({\r\n//       ...form,\r\n//       [name]: name === 'quantity' || name === 'unitPrice' ? Number(value) : value\r\n//     });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     setImage(file);\r\n//     if (file) {\r\n//       setPreview(URL.createObjectURL(file));\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     Object.entries(form).forEach(([key, value]) => {\r\n//       formData.append(key, value);\r\n//     });\r\n\r\n//     if (image) {\r\n//       formData.append('image', image);\r\n//     }\r\n\r\n//     formData.append('customerId', customerId);\r\n\r\n//     try {\r\n//       if (!itemId || itemId === 'new') {\r\n//         await api.post('/items', formData);\r\n//       } else {\r\n//         await api.put(`/items/${itemId}`, formData);\r\n//       }\r\n//       navigate(`/customer/${customerId}`);\r\n//     } catch (err) {\r\n//       console.error('❌ Error saving item:', err.response?.data || err.message);\r\n//       alert('Error saving item: ' + (err.response?.data?.error || err.message));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className=\"product-form\">\r\n//       <h2>{!itemId || itemId === 'new' ? 'Add Product' : 'Edit Product'}</h2>\r\n\r\n//       <div className=\"row\">\r\n//         <input\r\n//           name=\"name\"\r\n//           placeholder=\"Name\"\r\n//           value={form.name}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           name=\"description\"\r\n//           placeholder=\"Description\"\r\n//           value={form.description}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <input\r\n//           name=\"quantity\"\r\n//           type=\"number\"\r\n//           min=\"1\"\r\n//           value={form.quantity}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"row\">\r\n//         <input\r\n//           name=\"unitPrice\"\r\n//           type=\"number\"\r\n//           step=\"0.01\"\r\n//           min=\"0\"\r\n//           value={form.unitPrice}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n//       </div>\r\n\r\n//       {preview && (\r\n//         <div className=\"row\">\r\n//           <img\r\n//             src={preview}\r\n//             alt=\"Preview\"\r\n//             style={{\r\n//               width: '120px',\r\n//               height: '120px',\r\n//               objectFit: 'cover',\r\n//               borderRadius: '8px',\r\n//               border: '1px solid #ccc'\r\n//             }}\r\n//           />\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\r\n//         <button type=\"submit\">💾 Save Product</button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default ItemForm;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}