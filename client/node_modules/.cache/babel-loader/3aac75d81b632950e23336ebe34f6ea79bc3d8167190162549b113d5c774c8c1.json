{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/inventory/client/src/pages/CustomerDetail.js\";\nimport React from \"react\";\nimport CustomerDetail from \"./CustomerDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleItem = {\n  name: \"Mohamed\",\n  phone: \"0750-000-0000\",\n  products: [{\n    name: \"TV\",\n    price: 300\n  }, {\n    name: \"Fridge\",\n    price: 500\n  }]\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomerDetail, {\n      item: sampleItem,\n      onEdit: item => console.log(\"Edit customer\", item),\n      onDelete: item => console.log(\"Delete customer\", item),\n      onEditProduct: product => console.log(\"Edit product\", product),\n      onDeleteProduct: product => console.log(\"Delete product\", product)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\n\n// import React, { useEffect, useState } from 'react';\n// import './CustomerDetail.css';\n\n// import { useParams, Link } from 'react-router-dom';\n// import api from '../api';\n\n// const CustomerDetail = () => {\n//   const { id } = useParams();\n//   const [customer, setCustomer] = useState(null);\n//   const [items, setItems] = useState([]);\n//   const [showPayments, setShowPayments] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n\n//   const fetchCustomerAndItems = async () => {\n//     try {\n//       const customerRes = await api.get('/customers');\n//       const sortedCustomers = customerRes.data.sort((a, b) =>\n//         a.name.localeCompare(b.name, 'ku', { sensitivity: 'base' })\n//       );\n\n//       const foundIndex = sortedCustomers.findIndex(c => c._id === id);\n//       const foundCustomer = sortedCustomers[foundIndex];\n//       if (foundCustomer) {\n//         foundCustomer.billNo = 1000 + foundIndex + 1;\n//         setCustomer(foundCustomer);\n//       }\n\n//       const itemsRes = await api.get('/items');\n//       const filtered = itemsRes.data.items.filter(i =>\n//         i.customerId === id || i.customerId?._id === id\n//       );\n//       setItems(filtered);\n//     } catch (err) {\n//       console.error('Error fetching data:', err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCustomerAndItems();\n//   }, [id]);\n\n//   const handleDeleteItem = async (itemId) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       await api.delete(`/items/${itemId}`);\n//       fetchCustomerAndItems(); // Refetch to reflect latest\n//     }\n//   };\n\n//   const registerPayment = async () => {\n//     if (remaining <= 0) {\n//       alert('Customer has already paid in full.');\n//       return;\n//     }\n\n//     try {\n//       await api.post(`/customers/${customer._id}/payments`, {\n//         amount: parseFloat(paymentAmount)\n//       });\n//       setShowPayments(false);\n//       setPaymentAmount('');\n//       fetchCustomerAndItems(); // Refresh payment history\n//     } catch (err) {\n//       alert('Failed to save payment');\n//       console.error(err);\n//     }\n//   };\n\n//   if (!customer) return <p>Loading...</p>;\n\n//   const totalValue = items.reduce((sum, item) => sum + (item.totalPrice || 0), 0);\n//   const totalPaid = customer.payments?.reduce((sum, p) => sum + p.amount, 0) || 0;\n//   const remaining = totalValue - totalPaid;\n\n//   const whatsappLink = `https://wa.me/${customer.phone?.replace(/\\D/g, '')}?text=Hello%20${encodeURIComponent(customer.name)},%20regarding%20your%20inventory`;\n//   const mailLink = `mailto:${customer.email}?subject=Inventory Update`;\n\n//   return (\n//     <div className=\"item-detail\">\n//       <Link to=\"/\" className=\"button\" style={{ display: 'block', marginTop: '2rem' }}>\n//         ← Back to Customers\n//       </Link>\n//       <h1>{customer.name}</h1>\n//       <p><strong>🧾 Bill No:</strong> {customer.billNo}</p>\n//       <p>📍 {customer.address || 'No address provided'}</p>\n//       <p>📞 {customer.phone || 'No phone provided'}</p>\n//       <p>✉️ {customer.email || 'No email provided'}</p>\n\n//       <div style={{ marginTop: '10px', display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n//         {customer.phone && (\n//           <a href={whatsappLink} className=\"button\" target=\"_blank\" rel=\"noreferrer\">💬 WhatsApp</a>\n//         )}\n//         {customer.email && <a href={mailLink} className=\"button\">📧 Email</a>}\n//         <Link to={`/customer/${customer._id}/edit`} className=\"button\">✏️ Edit Customer</Link>\n//         <Link to={`/customer/${customer._id}/receipt`} className=\"button\">🧾 Print Receipt</Link>\n//         {remaining > 0 ? (\n//           <button className=\"button\" onClick={() => setShowPayments(true)}>💸 Register Payment</button>\n//         ) : (\n//           <span style={{\n//             padding: '8px 14px',\n//             background: '#28a745',\n//             color: 'white',\n//             borderRadius: '6px',\n//             fontWeight: 'bold',\n//             fontSize: '14px'\n//           }}>\n//             ✅ Paid in Full\n//           </span>\n//         )}\n//       </div>\n\n//       <hr style={{ margin: '2rem 0' }} />\n//       <h2>📦 Products</h2>\n\n//       <Link to={`/customer/${customer._id}/item/new`} className=\"button\" style={{ marginBottom: '1rem' }}>\n//         ➕ Add Product\n//       </Link>\n\n//       {items.length === 0 ? (\n//         <p>No items for this customer.</p>\n//       ) : (\n//         <>\n//           <table className=\"customer-table\">\n//             <thead>\n//               <tr>\n//                 <th>Image</th>\n//                 <th>Product Name</th>\n//                 <th>Quantity</th>\n//                 <th>Unit Price</th>\n//                 <th>Total</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {items.map(item => (\n//                 <tr key={item._id}>\n//                   <td>\n//                     {item.imageUrl ? (\n//                       <img\n//                         src={`http://localhost:5000${item.imageUrl}`}\n//                         alt={item.name}\n//                         style={{ width: '60px', height: '60px', objectFit: 'cover', borderRadius: '6px' }}\n//                       />\n//                     ) : '—'}\n//                   </td>\n//                   <td>{item.name}</td>\n//                   <td>{item.quantity}</td>\n//                   <td>${item.unitPrice}</td>\n//                   <td>${item.totalPrice.toFixed(2)}</td>\n//                   <td>\n//                     <Link to={`/customer/${customer._id}/item/${item._id}/edit`} className=\"button\" style={{ marginRight: '5px' }}>\n//                       ✏️ Edit\n//                     </Link>\n//                     <button onClick={() => handleDeleteItem(item._id)} className=\"button\" style={{ backgroundColor: 'red' }}>\n//                       🗑 Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n\n//           <div style={{ textAlign: 'right', fontWeight: 'bold', marginTop: '1rem' }}>\n//             🧾 Total Inventory Value: ${totalValue.toFixed(2)} <br />\n//             💳 Total Paid: ${totalPaid.toFixed(2)} <br />\n//             💰 Remaining: ${remaining.toFixed(2)}\n//             <details style={{ marginTop: '0.5rem' }}>\n//               <summary>📆 View Payment History</summary>\n//               <ul>\n//                 {customer.payments?.map((p, idx) => (\n//                   <li key={idx}>💵 ${p.amount} on {new Date(p.date).toLocaleDateString()}</li>\n//                 ))}\n//               </ul>\n//             </details>\n//           </div>\n//         </>\n//       )}\n\n//       {showPayments && (\n//         <div className=\"modal-backdrop\">\n//           <div className=\"modal\">\n//             <h3>Register Payment</h3>\n//             <input\n//               type=\"number\"\n//               min=\"0\"\n//               placeholder=\"Amount Paid\"\n//               value={paymentAmount}\n//               onChange={(e) => setPaymentAmount(e.target.value)}\n//             />\n//             <div style={{ marginTop: '1rem' }}>\n//               <button className=\"button\" onClick={registerPayment}>💾 Save Payment</button>\n//               <button onClick={() => setShowPayments(false)} className=\"button\" style={{ backgroundColor: '#888', marginLeft: '10px' }}>\n//                 ❌ Cancel\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CustomerDetail;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CustomerDetail","jsxDEV","_jsxDEV","sampleItem","name","phone","products","price","App","children","item","onEdit","console","log","onDelete","onEditProduct","product","onDeleteProduct","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/inventory/client/src/pages/CustomerDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\n\r\nconst sampleItem = {\r\n  name: \"Mohamed\",\r\n  phone: \"0750-000-0000\",\r\n  products: [\r\n    { name: \"TV\", price: 300 },\r\n    { name: \"Fridge\", price: 500 },\r\n  ],\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <CustomerDetail\r\n        item={sampleItem}\r\n        onEdit={(item) => console.log(\"Edit customer\", item)}\r\n        onDelete={(item) => console.log(\"Delete customer\", item)}\r\n        onEditProduct={(product) => console.log(\"Edit product\", product)}\r\n        onDeleteProduct={(product) => console.log(\"Delete product\", product)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import './CustomerDetail.css';\r\n\r\n// import { useParams, Link } from 'react-router-dom';\r\n// import api from '../api';\r\n\r\n// const CustomerDetail = () => {\r\n//   const { id } = useParams();\r\n//   const [customer, setCustomer] = useState(null);\r\n//   const [items, setItems] = useState([]);\r\n//   const [showPayments, setShowPayments] = useState(false);\r\n//   const [paymentAmount, setPaymentAmount] = useState('');\r\n\r\n//   const fetchCustomerAndItems = async () => {\r\n//     try {\r\n//       const customerRes = await api.get('/customers');\r\n//       const sortedCustomers = customerRes.data.sort((a, b) =>\r\n//         a.name.localeCompare(b.name, 'ku', { sensitivity: 'base' })\r\n//       );\r\n\r\n//       const foundIndex = sortedCustomers.findIndex(c => c._id === id);\r\n//       const foundCustomer = sortedCustomers[foundIndex];\r\n//       if (foundCustomer) {\r\n//         foundCustomer.billNo = 1000 + foundIndex + 1;\r\n//         setCustomer(foundCustomer);\r\n//       }\r\n\r\n//       const itemsRes = await api.get('/items');\r\n//       const filtered = itemsRes.data.items.filter(i =>\r\n//         i.customerId === id || i.customerId?._id === id\r\n//       );\r\n//       setItems(filtered);\r\n//     } catch (err) {\r\n//       console.error('Error fetching data:', err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCustomerAndItems();\r\n//   }, [id]);\r\n\r\n//   const handleDeleteItem = async (itemId) => {\r\n//     if (window.confirm('Are you sure you want to delete this item?')) {\r\n//       await api.delete(`/items/${itemId}`);\r\n//       fetchCustomerAndItems(); // Refetch to reflect latest\r\n//     }\r\n//   };\r\n\r\n//   const registerPayment = async () => {\r\n//     if (remaining <= 0) {\r\n//       alert('Customer has already paid in full.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await api.post(`/customers/${customer._id}/payments`, {\r\n//         amount: parseFloat(paymentAmount)\r\n//       });\r\n//       setShowPayments(false);\r\n//       setPaymentAmount('');\r\n//       fetchCustomerAndItems(); // Refresh payment history\r\n//     } catch (err) {\r\n//       alert('Failed to save payment');\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   if (!customer) return <p>Loading...</p>;\r\n\r\n//   const totalValue = items.reduce((sum, item) => sum + (item.totalPrice || 0), 0);\r\n//   const totalPaid = customer.payments?.reduce((sum, p) => sum + p.amount, 0) || 0;\r\n//   const remaining = totalValue - totalPaid;\r\n\r\n//   const whatsappLink = `https://wa.me/${customer.phone?.replace(/\\D/g, '')}?text=Hello%20${encodeURIComponent(customer.name)},%20regarding%20your%20inventory`;\r\n//   const mailLink = `mailto:${customer.email}?subject=Inventory Update`;\r\n\r\n//   return (\r\n//     <div className=\"item-detail\">\r\n//       <Link to=\"/\" className=\"button\" style={{ display: 'block', marginTop: '2rem' }}>\r\n//         ← Back to Customers\r\n//       </Link>\r\n//       <h1>{customer.name}</h1>\r\n//       <p><strong>🧾 Bill No:</strong> {customer.billNo}</p>\r\n//       <p>📍 {customer.address || 'No address provided'}</p>\r\n//       <p>📞 {customer.phone || 'No phone provided'}</p>\r\n//       <p>✉️ {customer.email || 'No email provided'}</p>\r\n\r\n//       <div style={{ marginTop: '10px', display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n//         {customer.phone && (\r\n//           <a href={whatsappLink} className=\"button\" target=\"_blank\" rel=\"noreferrer\">💬 WhatsApp</a>\r\n//         )}\r\n//         {customer.email && <a href={mailLink} className=\"button\">📧 Email</a>}\r\n//         <Link to={`/customer/${customer._id}/edit`} className=\"button\">✏️ Edit Customer</Link>\r\n//         <Link to={`/customer/${customer._id}/receipt`} className=\"button\">🧾 Print Receipt</Link>\r\n//         {remaining > 0 ? (\r\n//           <button className=\"button\" onClick={() => setShowPayments(true)}>💸 Register Payment</button>\r\n//         ) : (\r\n//           <span style={{\r\n//             padding: '8px 14px',\r\n//             background: '#28a745',\r\n//             color: 'white',\r\n//             borderRadius: '6px',\r\n//             fontWeight: 'bold',\r\n//             fontSize: '14px'\r\n//           }}>\r\n//             ✅ Paid in Full\r\n//           </span>\r\n//         )}\r\n//       </div>\r\n\r\n//       <hr style={{ margin: '2rem 0' }} />\r\n//       <h2>📦 Products</h2>\r\n\r\n//       <Link to={`/customer/${customer._id}/item/new`} className=\"button\" style={{ marginBottom: '1rem' }}>\r\n//         ➕ Add Product\r\n//       </Link>\r\n\r\n//       {items.length === 0 ? (\r\n//         <p>No items for this customer.</p>\r\n//       ) : (\r\n//         <>\r\n//           <table className=\"customer-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Image</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Quantity</th>\r\n//                 <th>Unit Price</th>\r\n//                 <th>Total</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {items.map(item => (\r\n//                 <tr key={item._id}>\r\n//                   <td>\r\n//                     {item.imageUrl ? (\r\n//                       <img\r\n//                         src={`http://localhost:5000${item.imageUrl}`}\r\n//                         alt={item.name}\r\n//                         style={{ width: '60px', height: '60px', objectFit: 'cover', borderRadius: '6px' }}\r\n//                       />\r\n//                     ) : '—'}\r\n//                   </td>\r\n//                   <td>{item.name}</td>\r\n//                   <td>{item.quantity}</td>\r\n//                   <td>${item.unitPrice}</td>\r\n//                   <td>${item.totalPrice.toFixed(2)}</td>\r\n//                   <td>\r\n//                     <Link to={`/customer/${customer._id}/item/${item._id}/edit`} className=\"button\" style={{ marginRight: '5px' }}>\r\n//                       ✏️ Edit\r\n//                     </Link>\r\n//                     <button onClick={() => handleDeleteItem(item._id)} className=\"button\" style={{ backgroundColor: 'red' }}>\r\n//                       🗑 Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n\r\n//           <div style={{ textAlign: 'right', fontWeight: 'bold', marginTop: '1rem' }}>\r\n//             🧾 Total Inventory Value: ${totalValue.toFixed(2)} <br />\r\n//             💳 Total Paid: ${totalPaid.toFixed(2)} <br />\r\n//             💰 Remaining: ${remaining.toFixed(2)}\r\n//             <details style={{ marginTop: '0.5rem' }}>\r\n//               <summary>📆 View Payment History</summary>\r\n//               <ul>\r\n//                 {customer.payments?.map((p, idx) => (\r\n//                   <li key={idx}>💵 ${p.amount} on {new Date(p.date).toLocaleDateString()}</li>\r\n//                 ))}\r\n//               </ul>\r\n//             </details>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n\r\n\r\n//       {showPayments && (\r\n//         <div className=\"modal-backdrop\">\r\n//           <div className=\"modal\">\r\n//             <h3>Register Payment</h3>\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"0\"\r\n//               placeholder=\"Amount Paid\"\r\n//               value={paymentAmount}\r\n//               onChange={(e) => setPaymentAmount(e.target.value)}\r\n//             />\r\n//             <div style={{ marginTop: '1rem' }}>\r\n//               <button className=\"button\" onClick={registerPayment}>💾 Save Payment</button>\r\n//               <button onClick={() => setShowPayments(false)} className=\"button\" style={{ backgroundColor: '#888', marginLeft: '10px' }}>\r\n//                 ❌ Cancel\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CustomerDetail;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,eAAe;EACtBC,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,IAAI;IAAEG,KAAK,EAAE;EAAI,CAAC,EAC1B;IAAEH,IAAI,EAAE,QAAQ;IAAEG,KAAK,EAAE;EAAI,CAAC;AAElC,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEN,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACF,cAAc;MACbU,IAAI,EAAEP,UAAW;MACjBQ,MAAM,EAAGD,IAAI,IAAKE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAE;MACrDI,QAAQ,EAAGJ,IAAI,IAAKE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAE;MACzDK,aAAa,EAAGC,OAAO,IAAKJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,OAAO,CAAE;MACjEC,eAAe,EAAGD,OAAO,IAAKJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEG,OAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAZId,GAAG;AAcT,eAAeA,GAAG;;AAKlc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}