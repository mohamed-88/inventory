{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/inventory/client/src/pages/CustomerList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Stack, TextField, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Pagination } from '@mui/material';\nimport api from '../api';\nimport './CustomerList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 5;\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedLetter, setSelectedLetter] = useState('');\n  useEffect(() => {\n    api.get('/customers').then(res => {\n      const customersWithBill = res.data.map((c, i) => ({\n        ...c,\n        billNo: 1000 + i + 1\n      }));\n      setCustomers(customersWithBill);\n    });\n  }, []);\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n    setPage(1);\n  };\n  const handleLetterClick = letter => {\n    setSelectedLetter(letter);\n    setPage(1);\n  };\n  const filteredCustomers = customers.filter(c => {\n    var _c$phone, _c$email, _c$address, _c$billNo;\n    const lowerSearch = search.toLowerCase();\n    const matchesSearch = c.name.toLowerCase().includes(lowerSearch) || ((_c$phone = c.phone) === null || _c$phone === void 0 ? void 0 : _c$phone.toLowerCase().includes(lowerSearch)) || ((_c$email = c.email) === null || _c$email === void 0 ? void 0 : _c$email.toLowerCase().includes(lowerSearch)) || ((_c$address = c.address) === null || _c$address === void 0 ? void 0 : _c$address.toLowerCase().includes(lowerSearch)) || ((_c$billNo = c.billNo) === null || _c$billNo === void 0 ? void 0 : _c$billNo.toString().includes(lowerSearch));\n    const matchesLetter = selectedLetter === '' || c.name.startsWith(selectedLetter);\n    return matchesSearch && matchesLetter;\n  });\n  const totalPages = Math.ceil(filteredCustomers.length / ITEMS_PER_PAGE);\n  const visibleCustomers = filteredCustomers.slice((page - 1) * ITEMS_PER_PAGE, page * ITEMS_PER_PAGE);\n  const letters = Array.from(new Set(customers.map(c => {\n    var _c$name$;\n    return (_c$name$ = c.name[0]) === null || _c$name$ === void 0 ? void 0 : _c$name$.toUpperCase();\n  }).sort((a, b) => a.localeCompare(b))));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"\\uD83D\\uDCCB Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: {\n        xs: 'column',\n        sm: 'row'\n      },\n      spacing: 2,\n      alignItems: \"stretch\",\n      justifyContent: \"flex-start\",\n      mb: 3,\n      sx: {\n        p: 2,\n        backgroundColor: 'background.paper',\n        borderRadius: 3,\n        boxShadow: 3,\n        gap: 2,\n        flexWrap: 'nowrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        size: \"medium\",\n        fullWidth: true,\n        placeholder: \"\\uD83D\\uDD0D Search by name, phone, email, address, or bill...\",\n        value: search,\n        onChange: handleSearchChange,\n        sx: {\n          backgroundColor: '#fff',\n          borderRadius: 2,\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 2\n          },\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/customer/new\",\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        sx: {\n          height: 45,\n          textTransform: 'none',\n          fontWeight: 'bold',\n          borderRadius: 2,\n          padding: '0 20px',\n          // padding inside the button\n          boxShadow: 2,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: {\n            xs: '100%',\n            sm: 'auto'\n          } // full width on mobile and auto width on desktop\n        },\n        children: \"\\u2795 Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"customer-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Bill No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: visibleCustomers.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6,\n              align: \"center\",\n              children: \"No customers found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this) : visibleCustomers.map(c => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: c.billNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: c.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: c.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: c.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: c.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                component: Link,\n                to: `/customer/${c._id}`,\n                size: \"small\",\n                variant: \"outlined\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, c._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        page: page,\n        onChange: (e, value) => setPage(value),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerList, \"kXtVrWDTBiJBq+do2tEjKp58ick=\");\n_c = CustomerList;\nexport default CustomerList;\n\n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import api from '../api';\n\n// const ITEMS_PER_PAGE = 5;\n\n// const CustomerList = () => {\n//   const [customers, setCustomers] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [page, setPage] = useState(1);\n//   const [selectedLetter, setSelectedLetter] = useState('');\n\n//   useEffect(() => {\n//     api.get('/customers').then(res => {\n//       const customersWithBill = res.data.map((c, i) => ({ ...c, billNo: 1000 + i + 1 }));\n//       setCustomers(customersWithBill);\n//     });\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     setSearch(e.target.value);\n//     setPage(1);\n//   };\n\n//   const handleLetterClick = (letter) => {\n//     setSelectedLetter(letter);\n//     setPage(1);\n//   };\n\n//   const filteredCustomers = customers.filter((c) => {\n//     const lowerSearch = search.toLowerCase();\n//     const matchesSearch =\n//       c.name.toLowerCase().includes(lowerSearch) ||\n//       c.phone?.toLowerCase().includes(lowerSearch) ||\n//       c.email?.toLowerCase().includes(lowerSearch) ||\n//       c.address?.toLowerCase().includes(lowerSearch) ||\n//       c.billNo?.toString().includes(lowerSearch);\n\n//     const matchesLetter = selectedLetter === '' || c.name.startsWith(selectedLetter);\n//     return matchesSearch && matchesLetter;\n//   });\n\n//   const totalPages = Math.ceil(filteredCustomers.length / ITEMS_PER_PAGE);\n//   const visibleCustomers = filteredCustomers.slice(\n//     (page - 1) * ITEMS_PER_PAGE,\n//     page * ITEMS_PER_PAGE\n//   );\n\n//   const letters = Array.from(\n//     new Set(customers.map(c => c.name[0]?.toUpperCase()).sort((a, b) => a.localeCompare(b)))\n//   );\n\n//   return (\n//     <div className=\"grid-container\">\n//       <h1>Customer List</h1>\n\n//       <div\n//           className=\"customer-controls\"\n//           style={{\n//             marginBottom: '1rem',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             gap: '1rem',\n//             flexWrap: 'wrap'\n//           }}\n//         >\n//           <input\n//             type=\"text\"\n//             placeholder=\"🔍 Search by name, phone, email, address, or bill...\"\n//             value={search}\n//             onChange={handleSearchChange}\n//           />\n//           <Link to=\"/customer/new\" className=\"button\">➕ Add Customer</Link>\n//         </div>\n\n//       <div style={{ marginBottom: '1rem', textAlign: 'center' }}>\n//       <button className=\"button\" onClick={() => setSelectedLetter('')} style={{ marginLeft: '5px' }}>\n//           🌐 All\n//         </button>\n//         {letters.map((letter) => (\n//           <button\n//             key={letter}\n//             className=\"button\"\n//             onClick={() => handleLetterClick(letter)}\n//             style={{ margin: '0 2px' }}\n//           >\n//             {letter}\n//           </button>\n//         ))}\n\n//       </div>\n\n//       <table className=\"customer-table\">\n//         <thead>\n//           <tr>\n//             <th>Bill No</th>\n//             <th>Name</th>\n//             <th>Phone</th>\n//             <th>Email</th>\n//             <th>Address</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {visibleCustomers.length === 0 ? (\n//             <tr>\n//               <td colSpan=\"6\" style={{ textAlign: 'center' }}>No customers found.</td>\n//             </tr>\n//           ) : (\n//             visibleCustomers.map((c) => (\n//               <tr key={c._id}>\n//                 <td>{c.billNo}</td>\n//                 <td>{c.name}</td>\n//                 <td>{c.phone}</td>\n//                 <td>{c.email}</td>\n//                 <td>{c.address}</td>\n//                 <td>\n//                   <Link to={`/customer/${c._id}`} className=\"button\">View</Link>\n//                 </td>\n//               </tr>\n//             ))\n//           )}\n//         </tbody>\n//       </table>\n\n//       {totalPages > 1 && (\n//         <div className=\"pagination\" style={{ marginTop: '1rem', textAlign: 'center' }}>\n//           {Array.from({ length: totalPages }).map((_, idx) => (\n//             <button\n//               key={idx}\n//               className={page === idx + 1 ? 'active' : ''}\n//               onClick={() => setPage(idx + 1)}\n//               style={{\n//                 margin: '0 5px',\n//                 backgroundColor: page === idx + 1 ? '#007bff' : '#eee',\n//                 color: page === idx + 1 ? '#fff' : '#000',\n//                 padding: '6px 12px',\n//                 borderRadius: '4px',\n//                 border: 'none',\n//                 cursor: 'pointer'\n//               }}\n//             >\n//               {idx + 1}\n//             </button>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Box","Button","Stack","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Pagination","api","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","CustomerList","_s","customers","setCustomers","search","setSearch","page","setPage","selectedLetter","setSelectedLetter","get","then","res","customersWithBill","data","map","c","i","billNo","handleSearchChange","e","target","value","handleLetterClick","letter","filteredCustomers","filter","_c$phone","_c$email","_c$address","_c$billNo","lowerSearch","toLowerCase","matchesSearch","name","includes","phone","email","address","toString","matchesLetter","startsWith","totalPages","Math","ceil","length","visibleCustomers","slice","letters","Array","from","Set","_c$name$","toUpperCase","sort","a","b","localeCompare","p","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","direction","xs","sm","spacing","alignItems","justifyContent","mb","sx","backgroundColor","borderRadius","boxShadow","gap","flexWrap","size","fullWidth","placeholder","onChange","flex","component","to","color","height","textTransform","fontWeight","padding","display","width","className","colSpan","_id","mt","count","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/inventory/client/src/pages/CustomerList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Stack, TextField, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Pagination } from '@mui/material';\r\nimport api from '../api';\r\nimport './CustomerList.css';\r\n\r\nconst ITEMS_PER_PAGE = 5;\r\n\r\nconst CustomerList = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [selectedLetter, setSelectedLetter] = useState('');\r\n\r\n  useEffect(() => {\r\n    api.get('/customers').then((res) => {\r\n      const customersWithBill = res.data.map((c, i) => ({\r\n        ...c,\r\n        billNo: 1000 + i + 1,\r\n      }));\r\n      setCustomers(customersWithBill);\r\n    });\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleLetterClick = (letter) => {\r\n    setSelectedLetter(letter);\r\n    setPage(1);\r\n  };\r\n\r\n  const filteredCustomers = customers.filter((c) => {\r\n    const lowerSearch = search.toLowerCase();\r\n    const matchesSearch =\r\n      c.name.toLowerCase().includes(lowerSearch) ||\r\n      c.phone?.toLowerCase().includes(lowerSearch) ||\r\n      c.email?.toLowerCase().includes(lowerSearch) ||\r\n      c.address?.toLowerCase().includes(lowerSearch) ||\r\n      c.billNo?.toString().includes(lowerSearch);\r\n\r\n    const matchesLetter = selectedLetter === '' || c.name.startsWith(selectedLetter);\r\n    return matchesSearch && matchesLetter;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredCustomers.length / ITEMS_PER_PAGE);\r\n  const visibleCustomers = filteredCustomers.slice(\r\n    (page - 1) * ITEMS_PER_PAGE,\r\n    page * ITEMS_PER_PAGE\r\n  );\r\n\r\n  const letters = Array.from(\r\n    new Set(customers.map((c) => c.name[0]?.toUpperCase()).sort((a, b) => a.localeCompare(b)))\r\n  );\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        📋 Customer List\r\n      </Typography>\r\n\r\n      <Stack\r\n        direction={{ xs: 'column', sm: 'row' }}\r\n        spacing={2}\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"flex-start\"\r\n        mb={3}\r\n        sx={{\r\n          p: 2,\r\n          backgroundColor: 'background.paper',\r\n          borderRadius: 3,\r\n          boxShadow: 3,\r\n          gap: 2,\r\n          flexWrap: 'nowrap',\r\n        }}\r\n      >\r\n        <TextField\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          fullWidth\r\n          placeholder=\"🔍 Search by name, phone, email, address, or bill...\"\r\n          value={search}\r\n          onChange={handleSearchChange}\r\n          sx={{\r\n            backgroundColor: '#fff',\r\n            borderRadius: 2,\r\n            '& .MuiOutlinedInput-root': {\r\n              borderRadius: 2,\r\n            },\r\n            flex: 1,\r\n          }}\r\n        />\r\n        <Button\r\n  component={Link}\r\n  to=\"/customer/new\"\r\n  variant=\"contained\"\r\n  color=\"primary\"\r\n  size=\"medium\"\r\n  sx={{\r\n    height: 45,\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    borderRadius: 2,\r\n    padding: '0 20px', // padding inside the button\r\n    boxShadow: 2,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: { xs: '100%', sm: 'auto' }, // full width on mobile and auto width on desktop\r\n  }}\r\n>\r\n  ➕ Add Customer\r\n</Button>\r\n\r\n      </Stack>\r\n\r\n      <TableContainer component={Paper} className=\"table-container\">\r\n        <Table className=\"customer-table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Bill No</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Phone</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Address</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {visibleCustomers.length === 0 ? (\r\n              <TableRow>\r\n                <TableCell colSpan={6} align=\"center\">\r\n                  No customers found.\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : (\r\n              visibleCustomers.map((c) => (\r\n                <TableRow key={c._id}>\r\n                  <TableCell>{c.billNo}</TableCell>\r\n                  <TableCell>{c.name}</TableCell>\r\n                  <TableCell>{c.phone}</TableCell>\r\n                  <TableCell>{c.email}</TableCell>\r\n                  <TableCell>{c.address}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      component={Link}\r\n                      to={`/customer/${c._id}`}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      View\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {totalPages > 1 && (\r\n        <Box mt={3} display=\"flex\" justifyContent=\"center\">\r\n          <Pagination\r\n            count={totalPages}\r\n            page={page}\r\n            onChange={(e, value) => setPage(value)}\r\n            color=\"primary\"\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n\r\n\r\n \r\n \r\n \r\n // import React, { useEffect, useState } from 'react';\r\n  // import { Link } from 'react-router-dom';\r\n  // import api from '../api';\r\n\r\n  // const ITEMS_PER_PAGE = 5;\r\n\r\n  // const CustomerList = () => {\r\n  //   const [customers, setCustomers] = useState([]);\r\n  //   const [search, setSearch] = useState('');\r\n  //   const [page, setPage] = useState(1);\r\n  //   const [selectedLetter, setSelectedLetter] = useState('');\r\n\r\n  //   useEffect(() => {\r\n  //     api.get('/customers').then(res => {\r\n  //       const customersWithBill = res.data.map((c, i) => ({ ...c, billNo: 1000 + i + 1 }));\r\n  //       setCustomers(customersWithBill);\r\n  //     });\r\n  //   }, []);\r\n\r\n  //   const handleSearchChange = (e) => {\r\n  //     setSearch(e.target.value);\r\n  //     setPage(1);\r\n  //   };\r\n\r\n  //   const handleLetterClick = (letter) => {\r\n  //     setSelectedLetter(letter);\r\n  //     setPage(1);\r\n  //   };\r\n\r\n  //   const filteredCustomers = customers.filter((c) => {\r\n  //     const lowerSearch = search.toLowerCase();\r\n  //     const matchesSearch =\r\n  //       c.name.toLowerCase().includes(lowerSearch) ||\r\n  //       c.phone?.toLowerCase().includes(lowerSearch) ||\r\n  //       c.email?.toLowerCase().includes(lowerSearch) ||\r\n  //       c.address?.toLowerCase().includes(lowerSearch) ||\r\n  //       c.billNo?.toString().includes(lowerSearch);\r\n\r\n  //     const matchesLetter = selectedLetter === '' || c.name.startsWith(selectedLetter);\r\n  //     return matchesSearch && matchesLetter;\r\n  //   });\r\n\r\n  //   const totalPages = Math.ceil(filteredCustomers.length / ITEMS_PER_PAGE);\r\n  //   const visibleCustomers = filteredCustomers.slice(\r\n  //     (page - 1) * ITEMS_PER_PAGE,\r\n  //     page * ITEMS_PER_PAGE\r\n  //   );\r\n\r\n  //   const letters = Array.from(\r\n  //     new Set(customers.map(c => c.name[0]?.toUpperCase()).sort((a, b) => a.localeCompare(b)))\r\n  //   );\r\n\r\n  //   return (\r\n  //     <div className=\"grid-container\">\r\n  //       <h1>Customer List</h1>\r\n\r\n  //       <div\r\n  //           className=\"customer-controls\"\r\n  //           style={{\r\n  //             marginBottom: '1rem',\r\n  //             display: 'flex',\r\n  //             justifyContent: 'center',\r\n  //             gap: '1rem',\r\n  //             flexWrap: 'wrap'\r\n  //           }}\r\n  //         >\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             placeholder=\"🔍 Search by name, phone, email, address, or bill...\"\r\n  //             value={search}\r\n  //             onChange={handleSearchChange}\r\n  //           />\r\n  //           <Link to=\"/customer/new\" className=\"button\">➕ Add Customer</Link>\r\n  //         </div>\r\n\r\n  //       <div style={{ marginBottom: '1rem', textAlign: 'center' }}>\r\n  //       <button className=\"button\" onClick={() => setSelectedLetter('')} style={{ marginLeft: '5px' }}>\r\n  //           🌐 All\r\n  //         </button>\r\n  //         {letters.map((letter) => (\r\n  //           <button\r\n  //             key={letter}\r\n  //             className=\"button\"\r\n  //             onClick={() => handleLetterClick(letter)}\r\n  //             style={{ margin: '0 2px' }}\r\n  //           >\r\n  //             {letter}\r\n  //           </button>\r\n  //         ))}\r\n\r\n  //       </div>\r\n\r\n  //       <table className=\"customer-table\">\r\n  //         <thead>\r\n  //           <tr>\r\n  //             <th>Bill No</th>\r\n  //             <th>Name</th>\r\n  //             <th>Phone</th>\r\n  //             <th>Email</th>\r\n  //             <th>Address</th>\r\n  //             <th>Actions</th>\r\n  //           </tr>\r\n  //         </thead>\r\n  //         <tbody>\r\n  //           {visibleCustomers.length === 0 ? (\r\n  //             <tr>\r\n  //               <td colSpan=\"6\" style={{ textAlign: 'center' }}>No customers found.</td>\r\n  //             </tr>\r\n  //           ) : (\r\n  //             visibleCustomers.map((c) => (\r\n  //               <tr key={c._id}>\r\n  //                 <td>{c.billNo}</td>\r\n  //                 <td>{c.name}</td>\r\n  //                 <td>{c.phone}</td>\r\n  //                 <td>{c.email}</td>\r\n  //                 <td>{c.address}</td>\r\n  //                 <td>\r\n  //                   <Link to={`/customer/${c._id}`} className=\"button\">View</Link>\r\n  //                 </td>\r\n  //               </tr>\r\n  //             ))\r\n  //           )}\r\n  //         </tbody>\r\n  //       </table>\r\n\r\n  //       {totalPages > 1 && (\r\n  //         <div className=\"pagination\" style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n  //           {Array.from({ length: totalPages }).map((_, idx) => (\r\n  //             <button\r\n  //               key={idx}\r\n  //               className={page === idx + 1 ? 'active' : ''}\r\n  //               onClick={() => setPage(idx + 1)}\r\n  //               style={{\r\n  //                 margin: '0 5px',\r\n  //                 backgroundColor: page === idx + 1 ? '#007bff' : '#eee',\r\n  //                 color: page === idx + 1 ? '#fff' : '#000',\r\n  //                 padding: '6px 12px',\r\n  //                 borderRadius: '4px',\r\n  //                 border: 'none',\r\n  //                 cursor: 'pointer'\r\n  //               }}\r\n  //             >\r\n  //               {idx + 1}\r\n  //             </button>\r\n  //           ))}\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  // export default CustomerList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAC9J,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAG,CAAC;AAExB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdgB,GAAG,CAACc,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAClC,MAAMC,iBAAiB,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;QAChD,GAAGD,CAAC;QACJE,MAAM,EAAE,IAAI,GAAGD,CAAC,GAAG;MACrB,CAAC,CAAC,CAAC;MACHd,YAAY,CAACU,iBAAiB,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAIC,CAAC,IAAK;IAChCf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACzBf,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMgB,iBAAiB,GAAIC,MAAM,IAAK;IACpCf,iBAAiB,CAACe,MAAM,CAAC;IACzBjB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMkB,iBAAiB,GAAGvB,SAAS,CAACwB,MAAM,CAAEV,CAAC,IAAK;IAAA,IAAAW,QAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,SAAA;IAChD,MAAMC,WAAW,GAAG3B,MAAM,CAAC4B,WAAW,CAAC,CAAC;IACxC,MAAMC,aAAa,GACjBjB,CAAC,CAACkB,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,MAAAJ,QAAA,GAC1CX,CAAC,CAACoB,KAAK,cAAAT,QAAA,uBAAPA,QAAA,CAASK,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,OAAAH,QAAA,GAC5CZ,CAAC,CAACqB,KAAK,cAAAT,QAAA,uBAAPA,QAAA,CAASI,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,OAAAF,UAAA,GAC5Cb,CAAC,CAACsB,OAAO,cAAAT,UAAA,uBAATA,UAAA,CAAWG,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,OAAAD,SAAA,GAC9Cd,CAAC,CAACE,MAAM,cAAAY,SAAA,uBAARA,SAAA,CAAUS,QAAQ,CAAC,CAAC,CAACJ,QAAQ,CAACJ,WAAW,CAAC;IAE5C,MAAMS,aAAa,GAAGhC,cAAc,KAAK,EAAE,IAAIQ,CAAC,CAACkB,IAAI,CAACO,UAAU,CAACjC,cAAc,CAAC;IAChF,OAAOyB,aAAa,IAAIO,aAAa;EACvC,CAAC,CAAC;EAEF,MAAME,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACnB,iBAAiB,CAACoB,MAAM,GAAG9C,cAAc,CAAC;EACvE,MAAM+C,gBAAgB,GAAGrB,iBAAiB,CAACsB,KAAK,CAC9C,CAACzC,IAAI,GAAG,CAAC,IAAIP,cAAc,EAC3BO,IAAI,GAAGP,cACT,CAAC;EAED,MAAMiD,OAAO,GAAGC,KAAK,CAACC,IAAI,CACxB,IAAIC,GAAG,CAACjD,SAAS,CAACa,GAAG,CAAEC,CAAC;IAAA,IAAAoC,QAAA;IAAA,QAAAA,QAAA,GAAKpC,CAAC,CAACkB,IAAI,CAAC,CAAC,CAAC,cAAAkB,QAAA,uBAATA,QAAA,CAAWC,WAAW,CAAC,CAAC;EAAA,EAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC,CAC3F,CAAC;EAED,oBACE1D,OAAA,CAACf,GAAG;IAAC2E,CAAC,EAAE,CAAE;IAAAC,QAAA,gBACR7D,OAAA,CAACX,UAAU;MAACyE,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbpE,OAAA,CAACb,KAAK;MACJkF,SAAS,EAAE;QAAEC,EAAE,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAM,CAAE;MACvCC,OAAO,EAAE,CAAE;MACXC,UAAU,EAAC,SAAS;MACpBC,cAAc,EAAC,YAAY;MAC3BC,EAAE,EAAE,CAAE;MACNC,EAAE,EAAE;QACFhB,CAAC,EAAE,CAAC;QACJiB,eAAe,EAAE,kBAAkB;QACnCC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,CAAC;QACZC,GAAG,EAAE,CAAC;QACNC,QAAQ,EAAE;MACZ,CAAE;MAAApB,QAAA,gBAEF7D,OAAA,CAACZ,SAAS;QACR0E,OAAO,EAAC,UAAU;QAClBoB,IAAI,EAAC,QAAQ;QACbC,SAAS;QACTC,WAAW,EAAC,gEAAsD;QAClE5D,KAAK,EAAElB,MAAO;QACd+E,QAAQ,EAAEhE,kBAAmB;QAC7BuD,EAAE,EAAE;UACFC,eAAe,EAAE,MAAM;UACvBC,YAAY,EAAE,CAAC;UACf,0BAA0B,EAAE;YAC1BA,YAAY,EAAE;UAChB,CAAC;UACDQ,IAAI,EAAE;QACR;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFpE,OAAA,CAACd,MAAM;QACbqG,SAAS,EAAEvG,IAAK;QAChBwG,EAAE,EAAC,eAAe;QAClB1B,OAAO,EAAC,WAAW;QACnB2B,KAAK,EAAC,SAAS;QACfP,IAAI,EAAC,QAAQ;QACbN,EAAE,EAAE;UACFc,MAAM,EAAE,EAAE;UACVC,aAAa,EAAE,MAAM;UACrBC,UAAU,EAAE,MAAM;UAClBd,YAAY,EAAE,CAAC;UACfe,OAAO,EAAE,QAAQ;UAAE;UACnBd,SAAS,EAAE,CAAC;UACZe,OAAO,EAAE,MAAM;UACfrB,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE,QAAQ;UACxBqB,KAAK,EAAE;YAAEzB,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAO,CAAC,CAAE;QACrC,CAAE;QAAAV,QAAA,EACH;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC,eAERpE,OAAA,CAACP,cAAc;MAAC8F,SAAS,EAAE3F,KAAM;MAACoG,SAAS,EAAC,iBAAiB;MAAAnC,QAAA,eAC3D7D,OAAA,CAACV,KAAK;QAAC0G,SAAS,EAAC,gBAAgB;QAAAnC,QAAA,gBAC/B7D,OAAA,CAACN,SAAS;UAAAmE,QAAA,eACR7D,OAAA,CAACL,QAAQ;YAAAkE,QAAA,gBACP7D,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC9BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC5BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC5BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC9BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZpE,OAAA,CAACT,SAAS;UAAAsE,QAAA,EACPb,gBAAgB,CAACD,MAAM,KAAK,CAAC,gBAC5B/C,OAAA,CAACL,QAAQ;YAAAkE,QAAA,eACP7D,OAAA,CAACR,SAAS;cAACyG,OAAO,EAAE,CAAE;cAAClC,KAAK,EAAC,QAAQ;cAAAF,QAAA,EAAC;YAEtC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,GAEXpB,gBAAgB,CAAC/B,GAAG,CAAEC,CAAC,iBACrBlB,OAAA,CAACL,QAAQ;YAAAkE,QAAA,gBACP7D,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAE3C,CAAC,CAACE;YAAM;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjCpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAE3C,CAAC,CAACkB;YAAI;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC/BpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAE3C,CAAC,CAACoB;YAAK;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChCpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAE3C,CAAC,CAACqB;YAAK;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChCpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,EAAE3C,CAAC,CAACsB;YAAO;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClCpE,OAAA,CAACR,SAAS;cAAAqE,QAAA,eACR7D,OAAA,CAACd,MAAM;gBACLqG,SAAS,EAAEvG,IAAK;gBAChBwG,EAAE,EAAE,aAAatE,CAAC,CAACgF,GAAG,EAAG;gBACzBhB,IAAI,EAAC,OAAO;gBACZpB,OAAO,EAAC,UAAU;gBAAAD,QAAA,EACnB;cAED;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GAfClD,CAAC,CAACgF,GAAG;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBV,CACX;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,EAEhBxB,UAAU,GAAG,CAAC,iBACb5C,OAAA,CAACf,GAAG;MAACkH,EAAE,EAAE,CAAE;MAACL,OAAO,EAAC,MAAM;MAACpB,cAAc,EAAC,QAAQ;MAAAb,QAAA,eAChD7D,OAAA,CAACH,UAAU;QACTuG,KAAK,EAAExD,UAAW;QAClBpC,IAAI,EAAEA,IAAK;QACX6E,QAAQ,EAAEA,CAAC/D,CAAC,EAAEE,KAAK,KAAKf,OAAO,CAACe,KAAK,CAAE;QACvCiE,KAAK,EAAC;MAAS;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjE,EAAA,CAtKID,YAAY;AAAAmG,EAAA,GAAZnG,YAAY;AAwKlB,eAAeA,YAAY;;AAM1B;AACC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}