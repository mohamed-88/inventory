{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/inventory/client/src/pages/CustomerForm.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Grid,\n//   TextField,\n//   Typography,\n//   Paper\n// } from '@mui/material';\n// import api from '../api';\n// import '../pages/CustomerForm.css';\n\n// const CustomerForm = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     address: ''\n//   });\n\n//   useEffect(() => {\n//     if (id && id !== 'new') {\n//       api.get('/customers').then(res => {\n//         const existing = res.data.find(c => c._id === id);\n//         if (existing) setForm(existing);\n//       });\n//     }\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (!id || id === 'new') {\n//         await api.post('/customers', form);\n//       } else {\n//         await api.put(`/customers/${id}`, form);\n//       }\n//       navigate('/');\n//     } catch (err) {\n//       alert('Error saving customer');\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\n//       <Paper elevation={4} sx={{ p: 4 }}>\n//         <Typography variant=\"h5\" align=\"center\" gutterBottom>\n//           {!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}\n//         </Typography>\n//         <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 name=\"name\"\n//                 label=\"Name\"\n//                 fullWidth\n//                 required\n//                 value={form.name}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n\n//             <Grid item xs={12}>\n//               <TextField\n//                 name=\"email\"\n//                 label=\"Email\"\n//                 type=\"email\"\n//                 fullWidth\n//                 value={form.email}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n\n//             <Grid item xs={12}>\n//               <TextField\n//                 name=\"phone\"\n//                 label=\"Phone\"\n//                 fullWidth\n//                 value={form.phone}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n\n//             <Grid item xs={12}>\n//               <TextField\n//                 name=\"address\"\n//                 label=\"Address\"\n//                 fullWidth\n//                 value={form.address}\n//                 onChange={handleChange}\n//               />\n//             </Grid>\n\n//             <Grid item xs={12} display=\"flex\" justifyContent=\"space-between\">\n//               <Button variant=\"outlined\" color=\"secondary\" onClick={() => navigate(-1)}>\n//                 ðŸ”™ Back\n//               </Button>\n//               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                 ðŸ’¾ Save\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </Box>\n//       </Paper>\n//     </Container>\n//   );\n// };\n\n// export default CustomerForm;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport api from '../api';\nimport './CustomerForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: ''\n  });\n  useEffect(() => {\n    if (id && id !== 'new') {\n      api.get('/customers').then(res => {\n        const existing = res.data.find(c => c._id === id);\n        if (existing) setForm(existing);\n      });\n    }\n  }, [id]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!id || id === 'new') {\n        await api.post('/customers', form);\n      } else {\n        await api.put(`/customers/${id}`, form);\n      }\n      navigate('/');\n    } catch (err) {\n      alert('Error saving customer');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"customer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: !id || id === 'new' ? 'Add Customer' : 'Edit Customer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          placeholder: \"Name\",\n          value: form.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          placeholder: \"Phone\",\n          value: form.phone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"address\",\n          placeholder: \"Address\",\n          value: form.address,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"back-button\",\n          onClick: () => navigate(-1),\n          children: \"\\uD83D\\uDD19 Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"\\uD83D\\uDCBE Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerForm, \"QpW7eQPq500SUQSpqW7z40pi4HQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CustomerForm;\nexport default CustomerForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","api","jsxDEV","_jsxDEV","CustomerForm","_s","id","navigate","form","setForm","name","email","phone","address","get","then","res","existing","data","find","c","_id","handleChange","e","target","value","handleSubmit","preventDefault","post","put","err","alert","console","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","type","onClick","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/inventory/client/src/pages/CustomerForm.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Container,\r\n//   Grid,\r\n//   TextField,\r\n//   Typography,\r\n//   Paper\r\n// } from '@mui/material';\r\n// import api from '../api';\r\n// import '../pages/CustomerForm.css';\r\n\r\n// const CustomerForm = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     address: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (id && id !== 'new') {\r\n//       api.get('/customers').then(res => {\r\n//         const existing = res.data.find(c => c._id === id);\r\n//         if (existing) setForm(existing);\r\n//       });\r\n//     }\r\n//   }, [id]);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (!id || id === 'new') {\r\n//         await api.post('/customers', form);\r\n//       } else {\r\n//         await api.put(`/customers/${id}`, form);\r\n//       }\r\n//       navigate('/');\r\n//     } catch (err) {\r\n//       alert('Error saving customer');\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\r\n//       <Paper elevation={4} sx={{ p: 4 }}>\r\n//         <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n//           {!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}\r\n//         </Typography>\r\n//         <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 name=\"name\"\r\n//                 label=\"Name\"\r\n//                 fullWidth\r\n//                 required\r\n//                 value={form.name}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 name=\"email\"\r\n//                 label=\"Email\"\r\n//                 type=\"email\"\r\n//                 fullWidth\r\n//                 value={form.email}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 name=\"phone\"\r\n//                 label=\"Phone\"\r\n//                 fullWidth\r\n//                 value={form.phone}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 name=\"address\"\r\n//                 label=\"Address\"\r\n//                 fullWidth\r\n//                 value={form.address}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12} display=\"flex\" justifyContent=\"space-between\">\r\n//               <Button variant=\"outlined\" color=\"secondary\" onClick={() => navigate(-1)}>\r\n//                 ðŸ”™ Back\r\n//               </Button>\r\n//               <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                 ðŸ’¾ Save\r\n//               </Button>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </Box>\r\n//       </Paper>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default CustomerForm;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport api from '../api';\r\nimport './CustomerForm.css';\r\n\r\nconst CustomerForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && id !== 'new') {\r\n      api.get('/customers').then(res => {\r\n        const existing = res.data.find(c => c._id === id);\r\n        if (existing) setForm(existing);\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!id || id === 'new') {\r\n        await api.post('/customers', form);\r\n      } else {\r\n        await api.put(`/customers/${id}`, form);\r\n      }\r\n      navigate('/');\r\n    } catch (err) {\r\n      alert('Error saving customer');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit} className=\"customer-form\">\r\n        <h1>{!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}</h1>\r\n\r\n        <div className=\"row\">\r\n          <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\r\n          <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} />\r\n          <input name=\"phone\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <input name=\"address\" placeholder=\"Address\" value={form.address} onChange={handleChange} />\r\n        </div>\r\n\r\n        <div className=\"button-row\">\r\n          <button type=\"button\" className=\"back-button\" onClick={() => navigate(-1)}>ðŸ”™ Back</button>\r\n          <button type=\"submit\" className=\"save-button\">ðŸ’¾ Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}