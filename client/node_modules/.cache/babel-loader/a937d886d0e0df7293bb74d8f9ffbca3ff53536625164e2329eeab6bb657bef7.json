{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/inventory/client/src/pages/CustomerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Box, Button, Container, Grid, TextField, Typography, Paper } from '@mui/material';\nimport api from '../api';\nimport './CustomerForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: ''\n  });\n  useEffect(() => {\n    if (id && id !== 'new') {\n      api.get('/customers').then(res => {\n        const existing = res.data.find(c => c._id === id);\n        if (existing) setForm(existing);\n      });\n    }\n  }, [id]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!id || id === 'new') {\n        await api.post('/customers', form);\n      } else {\n        await api.put(`/customers/${id}`, form);\n      }\n      navigate('/');\n    } catch (err) {\n      alert('Error saving customer');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"title\",\n        children: !id || id === 'new' ? 'Add Customer' : 'Edit Customer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"button-back\",\n              variant: \"contained\",\n              onClick: () => navigate(-1),\n              children: \"\\uD83D\\uDD19 Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button-save\",\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"\\uD83D\\uDCBE Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerForm, \"QpW7eQPq500SUQSpqW7z40pi4HQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CustomerForm;\nexport default CustomerForm;\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import api from '../api';\n// import './CustomerForm.css';\n\n// const CustomerForm = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     address: ''\n//   });\n\n//   useEffect(() => {\n//     if (id && id !== 'new') {\n//       api.get('/customers').then(res => {\n//         const existing = res.data.find(c => c._id === id);\n//         if (existing) setForm(existing);\n//       });\n//     }\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (!id || id === 'new') {\n//         await api.post('/customers', form);\n//       } else {\n//         await api.put(`/customers/${id}`, form);\n//       }\n//       navigate('/');\n//     } catch (err) {\n//       alert('Error saving customer');\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit} className=\"customer-form\">\n//         <h1>{!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}</h1>\n\n//         <div className=\"row\">\n//           <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\n//           <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} />\n//           <input name=\"phone\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} />\n//         </div>\n\n//         <div className=\"row\">\n//           <input name=\"address\" placeholder=\"Address\" value={form.address} onChange={handleChange} />\n//         </div>\n\n//         <div className=\"button-row\">\n//           <button type=\"button\" className=\"back-button\" onClick={() => navigate(-1)}>ðŸ”™ Back</button>\n//           <button type=\"submit\" className=\"save-button\">ðŸ’¾ Save</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CustomerForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","Box","Button","Container","Grid","TextField","Typography","Paper","api","jsxDEV","_jsxDEV","CustomerForm","_s","id","navigate","form","setForm","name","email","phone","address","get","then","res","existing","data","find","c","_id","handleChange","e","target","value","handleSubmit","preventDefault","post","put","err","alert","console","error","maxWidth","children","className","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","noValidate","container","spacing","item","xs","variant","onClick","type","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/inventory/client/src/pages/CustomerForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Paper\r\n} from '@mui/material';\r\nimport api from '../api';\r\nimport './CustomerForm.css';\r\n\r\n\r\nconst CustomerForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && id !== 'new') {\r\n      api.get('/customers').then(res => {\r\n        const existing = res.data.find(c => c._id === id);\r\n        if (existing) setForm(existing);\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!id || id === 'new') {\r\n        await api.post('/customers', form);\r\n      } else {\r\n        await api.put(`/customers/${id}`, form);\r\n      }\r\n      navigate('/');\r\n    } catch (err) {\r\n      alert('Error saving customer');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n  <div className=\"form-container\">\r\n    <Typography className=\"title\">\r\n      {!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}\r\n    </Typography>\r\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n      <Grid container spacing={2}>\r\n        {/* ... All fields ... */}\r\n\r\n        <Grid item xs={12} className=\"button-group\">\r\n          <Button\r\n            className=\"button-back\"\r\n            variant=\"contained\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            ðŸ”™ Back\r\n          </Button>\r\n          <Button\r\n            className=\"button-save\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            ðŸ’¾ Save\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  </div>\r\n</Container>\r\n\r\n  );\r\n};\r\n\r\nexport default CustomerForm;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import api from '../api';\r\n// import './CustomerForm.css';\r\n\r\n// const CustomerForm = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     address: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (id && id !== 'new') {\r\n//       api.get('/customers').then(res => {\r\n//         const existing = res.data.find(c => c._id === id);\r\n//         if (existing) setForm(existing);\r\n//       });\r\n//     }\r\n//   }, [id]);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (!id || id === 'new') {\r\n//         await api.post('/customers', form);\r\n//       } else {\r\n//         await api.put(`/customers/${id}`, form);\r\n//       }\r\n//       navigate('/');\r\n//     } catch (err) {\r\n//       alert('Error saving customer');\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={handleSubmit} className=\"customer-form\">\r\n//         <h1>{!id || id === 'new' ? 'Add Customer' : 'Edit Customer'}</h1>\r\n\r\n//         <div className=\"row\">\r\n//           <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\r\n//           <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} />\r\n//           <input name=\"phone\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} />\r\n//         </div>\r\n\r\n//         <div className=\"row\">\r\n//           <input name=\"address\" placeholder=\"Address\" value={form.address} onChange={handleChange} />\r\n//         </div>\r\n\r\n//         <div className=\"button-row\">\r\n//           <button type=\"button\" className=\"back-button\" onClick={() => navigate(-1)}>ðŸ”™ Back</button>\r\n//           <button type=\"submit\" className=\"save-button\">ðŸ’¾ Save</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CustomerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}